// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'customer_details_entity.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

CustomerDetailsEntity _$CustomerDetailsEntityFromJson(
    Map<String, dynamic> json) {
  return CustomerDetailsEntity(
    categoryId: json['categoryId'] as String?,
    name: json['name'] as String?,
    addressCors: json['addressCors'] as String?,
    cityCors: json['cityCors'] as String?,
    countryCors: json['countryCors'] as String?,
    stateCors: json['stateCors'] as String?,
    addressCurr: json['addressCurr'] as String?,
    countryCurr: json['countryCurr'] as String?,
    stateCurr: json['stateCurr'] as String?,
    cityCurr: json['cityCurr'] as String?,
    addressHomeCountry: json['addressHomeCountry'],
    countryHome: json['countryHome'] as String?,
    stateHome: json['stateHome'] as String?,
    cityHome: json['cityHome'] as String?,
    residentNonResident: json['residentNonResident'] as String?,
    countryofResidence: json['countryofResidence'] as String?,
    fatcaRelevantInd: json['fatcaRelevantInd'] as String?,
    crsRelevantInd: json['crsRelevantInd'] as String?,
    areYouAuSCitizenInd: json['areYouAuSCitizenInd'] as String?,
    areYouAusTaxResidentInd: json['areYouAUSTaxResidentInd'] as String?,
    wereYouBornInTheUsInd: json['wereYouBornInTheUSInd'] as String?,
    countryUsOrUaeInd: json['countryUSOrUAEInd'] as String?,
    phone1: json['phone1'] as String?,
    phone2: json['phone2'] as String?,
    mobileNo: json['mobileNo'] as String?,
    email: json['email'] as String?,
    nic: json['nic'] as String?,
    nationalCardNumber: json['nationalCardNumber'] as String?,
    nicExpirydate: json['nicExpirydate'] == null
        ? null
        : DateTime.parse(json['nicExpirydate'] as String),
    dob: json['dob'] == null ? null : DateTime.parse(json['dob'] as String),
    gender: json['gender'] as String?,
    maritalstatus: json['maritalstatus'] as String?,
    tinInd: json['tinind'],
    tinno1Ind: json['tinno1Ind'],
    taxCountry1Ind: json['taxCountry1Ind'],
    tinNo2Ind: json['tinNo2Ind'],
    taxCountry2Ind: json['taxCountry2Ind'] as String?,
    tinNo3Ind: json['tinNo3Ind'] as String?,
    taxCountry3Ind: json['taxCountry3Ind'] as String?,
    tinNo4Ind: json['tinNo4Ind'] as String?,
    taxCountry4Ind: json['taxCountry4Ind'] as String?,
    tinNo5Ind: json['tinNo5Ind'] as String?,
    taxCountry5Ind: json['taxCountry5Ind'] as String?,
    fatcaNoReason: json['fatcaNoReason'],
    reasonBind: json['reasonBind'],
    groupCode: json['groupCode'] as String?,
    mdmid: json['mdmid'],
    rManager: json['rManager'] as String?,
    riskProfile: json['riskProfile'] as String?,
    firstName: json['firstName'] as String?,
    middleName: json['middleName'] as String?,
    lastName: json['lastName'] as String?,
    nationality: json['nationality'] as String?,
    idIssueCountry: json['idIssueCountry'] as String?,
    passportNumber: json['passportNumber'] as String?,
    passportIssueDate: json['passportIssueDate'] == null
        ? null
        : DateTime.parse(json['passportIssueDate'] as String),
    passportExpiry: json['passportExpiry'],
    passportIssueCountry: json['passportIssueCountry'] as String?,
    passportGender: json['passportGender'] as String?,
    onboardingCountry: json['onboardingCountry'] as String?,
    employerName: json['employerName'] as String?,
    incomeBracket: json['incomeBracket'] as String?,
    kycReviewDate: json['kycReviewDate'] == null
        ? null
        : DateTime.parse(json['kycReviewDate'] as String),
    dualCitizenship: json['dualCitizenship'] as String?,
    citizenCountry2: json['citizenCountry2'] as String?,
    pep: json['pep'] as String?,
    blackList: json['blackList'] as String?,
    hni: json['hni'] as String?,
    refererPromoCode: json['refererPromoCode'],
    ourBranchId: json['ourBranchId'],
    idType: json['idType'] as String?,
    firstNameAr: json['firstNameAR'] as String?,
    secondNameAr: json['secondNameAR'] as String?,
    thirdNameAr: json['thirdNameAR'] as String?,
    familyNameAr: json['familyNameAR'] as String?,
    motherFirstName: json['motherFirstName'] as String?,
    placeofBirth: json['placeofBirth'] as String?,
    countryofBirth: json['countryofBirth'] as String?,
    relationshipPep: json['relationshipPep'] as String?,
    namePep: json['namePep'],
    rolePep: json['rolePep'],
    beneficialOwner: json['beneficialOwner'] as String?,
    districtCorresp: json['districtCorresp'] as String?,
    addressLine1: json['addressLine1'] as String?,
    spouseName: json['spouseName'] as String?,
    specialNeedsPerson: json['specialNeedsPerson'] as String?,
    natureofSpecialNeeds: json['natureofSpecialNeeds'] as String?,
    employmentStatus: json['employmentStatus'] as String?,
    occupation: json['occupation'] as String?,
    mainSourceofIncome: json['mainSourceofIncome'] as String?,
    otherEmploymentStatus: json['otherEmploymentStatus'],
    annualIncome: json['annualIncome'] as int?,
    monthlyIncome: json['monthlyIncome'],
    additionalIncomeSource: json['additionalIncomeSource'] as String?,
    otherAdditionalIncomeSource: json['otherAdditionalIncomeSource'] as String?,
    additionalIncomeAmount: json['additionalIncomeAmount'] as int?,
    employerPhone: json['employerPhone'] as String?,
    reasonforBanking: json['reasonforBanking'] as String?,
    preferredLanguage: json['preferredLanguage'],
    accountOfficer: json['accountOfficer'],
    ifrsFields: json['ifrsFields'],
    cbjSecretNumber: json['cbjSecretNumber'],
    obligerRating: json['obligerRating'],
    smsSubscription: json['smsSubscription'],
    titlear: json['titlear'],
    empCountry: json['empCountry'] as String?,
    empState: json['empState'],
    empCity: json['empCity'] as String?,
  );
}

Map<String, dynamic> _$CustomerDetailsEntityToJson(
        CustomerDetailsEntity instance) =>
    <String, dynamic>{
      'categoryId': instance.categoryId,
      'name': instance.name,
      'addressCors': instance.addressCors,
      'cityCors': instance.cityCors,
      'countryCors': instance.countryCors,
      'stateCors': instance.stateCors,
      'addressCurr': instance.addressCurr,
      'countryCurr': instance.countryCurr,
      'stateCurr': instance.stateCurr,
      'cityCurr': instance.cityCurr,
      'addressHomeCountry': instance.addressHomeCountry,
      'countryHome': instance.countryHome,
      'stateHome': instance.stateHome,
      'cityHome': instance.cityHome,
      'residentNonResident': instance.residentNonResident,
      'countryofResidence': instance.countryofResidence,
      'fatcaRelevantInd': instance.fatcaRelevantInd,
      'crsRelevantInd': instance.crsRelevantInd,
      'areYouAuSCitizenInd': instance.areYouAuSCitizenInd,
      'areYouAUSTaxResidentInd': instance.areYouAusTaxResidentInd,
      'wereYouBornInTheUSInd': instance.wereYouBornInTheUsInd,
      'countryUSOrUAEInd': instance.countryUsOrUaeInd,
      'phone1': instance.phone1,
      'phone2': instance.phone2,
      'mobileNo': instance.mobileNo,
      'email': instance.email,
      'nic': instance.nic,
      'nationalCardNumber': instance.nationalCardNumber,
      'nicExpirydate': instance.nicExpirydate?.toIso8601String(),
      'dob': instance.dob?.toIso8601String(),
      'gender': instance.gender,
      'maritalstatus': instance.maritalstatus,
      'tinind': instance.tinInd,
      'tinno1Ind': instance.tinno1Ind,
      'taxCountry1Ind': instance.taxCountry1Ind,
      'tinNo2Ind': instance.tinNo2Ind,
      'taxCountry2Ind': instance.taxCountry2Ind,
      'tinNo3Ind': instance.tinNo3Ind,
      'taxCountry3Ind': instance.taxCountry3Ind,
      'tinNo4Ind': instance.tinNo4Ind,
      'taxCountry4Ind': instance.taxCountry4Ind,
      'tinNo5Ind': instance.tinNo5Ind,
      'taxCountry5Ind': instance.taxCountry5Ind,
      'fatcaNoReason': instance.fatcaNoReason,
      'reasonBind': instance.reasonBind,
      'groupCode': instance.groupCode,
      'mdmid': instance.mdmid,
      'rManager': instance.rManager,
      'riskProfile': instance.riskProfile,
      'firstName': instance.firstName,
      'middleName': instance.middleName,
      'lastName': instance.lastName,
      'nationality': instance.nationality,
      'idIssueCountry': instance.idIssueCountry,
      'passportNumber': instance.passportNumber,
      'passportIssueDate': instance.passportIssueDate?.toIso8601String(),
      'passportExpiry': instance.passportExpiry,
      'passportIssueCountry': instance.passportIssueCountry,
      'passportGender': instance.passportGender,
      'onboardingCountry': instance.onboardingCountry,
      'employerName': instance.employerName,
      'incomeBracket': instance.incomeBracket,
      'kycReviewDate': instance.kycReviewDate?.toIso8601String(),
      'dualCitizenship': instance.dualCitizenship,
      'citizenCountry2': instance.citizenCountry2,
      'pep': instance.pep,
      'blackList': instance.blackList,
      'hni': instance.hni,
      'refererPromoCode': instance.refererPromoCode,
      'ourBranchId': instance.ourBranchId,
      'idType': instance.idType,
      'firstNameAR': instance.firstNameAr,
      'secondNameAR': instance.secondNameAr,
      'thirdNameAR': instance.thirdNameAr,
      'familyNameAR': instance.familyNameAr,
      'motherFirstName': instance.motherFirstName,
      'placeofBirth': instance.placeofBirth,
      'countryofBirth': instance.countryofBirth,
      'relationshipPep': instance.relationshipPep,
      'namePep': instance.namePep,
      'rolePep': instance.rolePep,
      'beneficialOwner': instance.beneficialOwner,
      'districtCorresp': instance.districtCorresp,
      'addressLine1': instance.addressLine1,
      'spouseName': instance.spouseName,
      'specialNeedsPerson': instance.specialNeedsPerson,
      'natureofSpecialNeeds': instance.natureofSpecialNeeds,
      'employmentStatus': instance.employmentStatus,
      'occupation': instance.occupation,
      'mainSourceofIncome': instance.mainSourceofIncome,
      'otherEmploymentStatus': instance.otherEmploymentStatus,
      'annualIncome': instance.annualIncome,
      'monthlyIncome': instance.monthlyIncome,
      'additionalIncomeSource': instance.additionalIncomeSource,
      'otherAdditionalIncomeSource': instance.otherAdditionalIncomeSource,
      'additionalIncomeAmount': instance.additionalIncomeAmount,
      'employerPhone': instance.employerPhone,
      'reasonforBanking': instance.reasonforBanking,
      'preferredLanguage': instance.preferredLanguage,
      'accountOfficer': instance.accountOfficer,
      'ifrsFields': instance.ifrsFields,
      'cbjSecretNumber': instance.cbjSecretNumber,
      'obligerRating': instance.obligerRating,
      'smsSubscription': instance.smsSubscription,
      'titlear': instance.titlear,
      'empCountry': instance.empCountry,
      'empState': instance.empState,
      'empCity': instance.empCity,
    };
