{	//* --------------------Use This Snippet to speedup in vscode--------------------------------
	// Place your NeoBank workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"UseCase Intialization": {
		"scope": "dart",
		"prefix": "useCaseInt",
		"body": [
			"class $1 extends BaseUseCase <NetworkError, $2, bool> { ",
				"final CliqRepository _cliqRepository; ",
				" $1(this._cliqRepository);}"
		],
		"description": "Extends with BaseUse"
	},

	"Params Creation": {
		"scope": "dart",
		"prefix": "param",
		"body": [
			"class $1 extends Params {",
			" final String $0 ;",
			"",
			"",
				"@override",
				"Either<AppError, bool> verify() {",
					"return Right(true);",
  		"}",
		"}"
		],
		"description": "Extends with Params"
	},

	"Request Entity": {
		"scope": "dart",
		"prefix": "requestEntity",
		"body": [
			"@JsonSerializable()",
			"class $1 {",
			"@JsonKey (name :   )",
			"final String ;",
			"@JsonKey (name :   )",
			"final Map<String,dynamic> ;",
			"",
			"",
			"",
			" factory $1.fromJson(Map<String, dynamic> json) =>",
     		 "_$$1FromJson(json);",

 		 "Map<String, dynamic> toJson() => _$$1ToJson(this);",
 			 "}",
		],
		"description": "api entity for request"
	

		},
	"DataSource Api Impliment": {
		"scope": "dart",
		"prefix": "apiservice for DataSource",
		"body": [
			"BaseClassEntity baseData = await _deviceInfoHelper.getDeviceInfo();",
			"return _apiService$0 ;"
		],
		"description": "Apiservice in Data implementation"
	},


		"Repository SafeApi Impliment": {
		"scope": "dart",
		"prefix": "safeApi for Repository",
		"body": [
			"final result = await safeApiCall(",
			" _cliqDataSource$0",
			"",
			");",
			"return result!.fold((l) => Left(l), (r) => Right(r.isSuccessful()));",
  			
		],
		"description": "SafeApi in Repository implementation"
	},


}